
name: paupis
secrets:
  django_secret_key:
    default: warning-override-for-production
  postgres_password:
    default: warning-override-for-production
  db_user:
    description: Root user to assign to the component's DB
    default: architect
  db_pass:
    description: Root password to assign to the component's DB
    default: secret
  db_name:
    description: Name of the DB the component will store content in
    default: app-db
  db_port:
    description: Port for the db
    default: 5432
  django_admin_user:
    description: Admin username
    default: admin
  django_admin_password:
    description: Password for the admin user
    default: secret
  django_admin_email:
    description: Email for the admin user
    default: admin@gmail.com
services:
  app-db:
    image: 'postgres:12'
    interfaces:
      database:
        port: '${{ secrets.db_port }}'
        protocol: postgresql
    environment:
      POSTGRES_USER: '${{ secrets.db_user }}'
      POSTGRES_PASSWORD: '${{ secrets.db_pass }}'
      POSTGRES_DB: '${{ secrets.db_name }}'
    liveness_probe:
      command: 'pg_isready -d ${{ secrets.db_name }} -U ${{ secrets.db_user }}'
      interval: 10s
      failure_threshold: 3
  app:
    depends_on:
      - app-db
    build:
      context: .
    command: |
      sh -c '
        python manage.py migrate --noinput
        python manage.py runscript cats_load
        python manage.py loaddata questions
        python manage.py loaddata paupis
        python manage.py createsuperuser --noinput
        uwsgi --http "0.0.0.0:8000" --module movies.wsgi:application --master --processes 4 --threads 2
      '
    interfaces:
      main:
        port: 8000
        ingress:
          subdomain: app
    liveness_probe:
      command: 'curl --fail 0.0.0.0:8000'
      interval: 10s
      failure_threshold: 3
    environment:
      ALLOWED_HOST: '.${{ services.app.interfaces.main.ingress.host }}'
      SECRET_KEY: '${{ secrets.django_secret_key }}'
      POSTGRES_DB: '${{ services.app-db.environment.POSTGRES_DB }}'
      POSTGRES_USER: '${{ services.app-db.environment.POSTGRES_USER }}'
      POSTGRES_PASSWORD: '${{ services.app-db.environment.POSTGRES_PASSWORD }}'
      POSTGRES_HOST: '${{ services.app-db.interfaces.database.host }}'
      POSTGRES_PORT: '${{ services.app-db.interfaces.database.port }}'
      DJANGO_SUPERUSER_EMAIL: '${{ secrets.django_admin_email}}'
      DJANGO_SUPERUSER_PASSWORD: '${{ secrets.django_admin_password }}'
      DJANGO_SUPERUSER_USERNAME: '${{ secrets.django_admin_user}}'
    debug:
      liveness_probe:
        initial_delay: 15s
      command: |
        sh -c '
          python manage.py migrate --noinput
          python manage.py runserver 0.0.0.0:8000
        '
      environment:
        ALLOWED_HOST: '*'
        DEBUG: 'True'
      volumes:
        app:
          host_path: .
          mount_path: /usr/src/app
